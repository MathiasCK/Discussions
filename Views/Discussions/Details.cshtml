@model Discussion
@{

    var sessionId = Context.Session.GetString("UserId");
    var successMessage = ViewBag.SuccessMessage as string;
    var errorMessage = ViewBag.ErrorMessage as string;
}


@if (!string.IsNullOrEmpty(successMessage))
{
    <div id="successMessage" class="alert alert-success">
        @successMessage
    </div>
}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div id="errorMessage" class="alert alert-danger">
        @errorMessage
    </div>
}

<header class="mb-2">
    <a asp-controller="Discussions" asp-action="Index" class="btn btn-primary">Back to Discussions</a>
</header>

<article class="card">
    <div class="card-header">
        @Model.Topic
    </div>
    <div class="card-body">
        <blockquote class="blockquote mb-0">
            <div class="mb-2">
                <p>@Model.Body</p>
            </div>
            <footer class="blockquote-footer"><cite title="Source Title">@Model?.Author?.Email.</cite></footer>
            @if (sessionId == Model?.Author?.Id)
            {
                <a asp-controller="Discussions" asp-action="Update" asp-route-id="@Model?.Id" class="btn btn-warning">Update</a>
                <a asp-controller="Discussions" asp-action="Delete" asp-route-id="@Model?.Id" class="btn btn-danger">Delete</a>
            }
        </blockquote>
    </div>
    <div class="card-footer text-muted date">
        @Model?.Created
    </div>
</article>

<section class="mt-2 mb-2">
    <h4>Comments</h4>
    <a class="btn btn-success" asp-controller="Comments" asp-action="Create" asp-route-discussionId="@Model.Id">
        Create new comment
    </a>
</section>

@foreach (Comment comment in Model.Comments)
{

    <article class="card mb-2" style="width: 18rem;">
        <div class="card-body">
            <blockquote class="blockquote mb-0">
                <div class="mb-2">
                    <p>@comment.Text</p>
                </div>
                <footer class="blockquote-footer"><cite title="Source Title">@comment?.Author?.Email</cite></footer>
                @if (sessionId == comment?.Author?.Id)
                {
                    <a asp-controller="Comments" asp-action="Delete" asp-route-commentId="@comment?.Id" class="btn btn-danger">Delete</a>
                }
            </blockquote>
        </div>
        <div class="card-footer text-muted date">
            @comment?.Created
        </div>
    </article>
}

<script>// Function taken from https://stackoverflow.com/questions/3177836/how-to-format-time-since-xxx-e-g-4-minutes-ago-similar-to-stack-exchange-site
    const formatDateTime = dateTime => {
        const seconds = Math.floor((new Date() - dateTime) / 1000);

        let interval = seconds / 31536000;

        if (interval > 1) {
            return Math.floor(interval) + " years ago";
        }
        interval = seconds / 2592000;
        if (interval > 1) {
            return Math.floor(interval) + " months ago";
        }
        interval = seconds / 86400;
        if (interval > 1) {
            return Math.floor(interval) + " days ago";
        }
        interval = seconds / 3600;
        if (interval > 1) {
            return Math.floor(interval) + " hours ago";
        }
        interval = seconds / 60;
        if (interval > 1) {
            return Math.floor(interval) + " minutes ago";
        }
        return "Less than a minute ago";
    }

    const dates = document.querySelectorAll('.date');

    dates.forEach(date => {
        const currentDate = new Date(date.textContent)
        date.textContent = formatDateTime(currentDate);
    })</script>
<script>setTimeout(() => document.getElementById("errorMessage").style.display = "none", 3000);</script>
<script>setTimeout(() => document.getElementById("successMessage").style.display = "none", 3000);</script>