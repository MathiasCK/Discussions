@model Discussion
@{

    var sessionId = Context.Session.GetString("UserId");
}

<a href="/Discussions" class="btn btn-primary">Back to Discussions</a>
<article class="card" style="width: 18rem;">
    <div class="card-body">
        <h5 class="card-title">@Model.Topic</h5>
        <p class="card-text">@Model.Body</p>
        <p class="card-text">Created: <span class="date">@Model.Created</span></p>
        <p class="card-text">Updated: <span class="date">@Model.Updated</span></p>
        @if (sessionId == Model?.Author?.Id)
        {
            <a asp-controller="Discussions" asp-action="Update" asp-route-id="@Model?.Id" class="btn btn-warning">Update</a>
            <a asp-controller="Discussions" asp-action="Delete" asp-route-id="@Model?.Id" class="btn btn-danger">Delete</a>
        }
    </div>
</article>

<h5 class="card-title">Comments</h5>

<a class="btn btn-success" asp-controller="Comments" asp-action="Create" asp-route-discussionId="@Model.Id">
    Create new comment
</a>

@foreach (Comment comment in Model.Comments)
{
    <article class="card" style="width: 18rem;">
        <div class="card-body">
            <h5 class="card-title">@comment.Text</h5>
            <p class="card-text">By: @comment?.Author?.Email</p>
            @if (sessionId == comment?.Author?.Id)
            {
                <a asp-controller="Comments" asp-action="Delete" asp-route-commentId="@comment.Id" class="btn btn-danger">Delete</a>
            }
        </div>
    </article>
}

<script>
    // Function taken from https://stackoverflow.com/questions/3177836/how-to-format-time-since-xxx-e-g-4-minutes-ago-similar-to-stack-exchange-site
    const formatDateTime = dateTime => {
        const seconds = Math.floor((new Date() - dateTime) / 1000);

        let interval = seconds / 31536000;

        if (interval > 1) {
            return Math.floor(interval) + " years ago";
        }
        interval = seconds / 2592000;
        if (interval > 1) {
            return Math.floor(interval) + " months ago";
        }
        interval = seconds / 86400;
        if (interval > 1) {
            return Math.floor(interval) + " days ago";
        }
        interval = seconds / 3600;
        if (interval > 1) {
            return Math.floor(interval) + " hours ago";
        }
        interval = seconds / 60;
        if (interval > 1) {
            return Math.floor(interval) + " minutes ago";
        }
        return "Less than a minute ago";
    }

    const dates = document.querySelectorAll('.date');

    dates.forEach(date => {
        const currentDate = new Date(date.textContent)
        date.textContent = formatDateTime(currentDate);
    })

    </script>